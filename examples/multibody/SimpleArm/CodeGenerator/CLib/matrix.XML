<CDDefinition>
    <name>matrix</name>
    <Description>
        This symbol represents the constructor function for a matrix of dimensions (n,m)
    </Description>
    <OMATTR>
        <OMATP>
            <OMForeign encoding="C_once">
                //Matrix allocation Numerical Recipes in C
                double **dmatrix(long nrl, long nrh, long ncl, long nch)
                /* allocate a double matrix with subscript range m[nrl..nrh][ncl..nch] */
                {
                long i, nrow=nrh-nrl+1,ncol=nch-ncl+1;
                double **m;

                /* allocate pointers to rows */
                m=(double **) malloc((size_t)((nrow+NR_END)*sizeof(double*)));
                //if (!m) nrerror("allocation failure 1 in matrix()");
                m += NR_END;
                m -= nrl;

                /* allocate rows and set pointers to them */
                m[nrl]=(double *) malloc((size_t)((nrow*ncol+NR_END)*sizeof(double)));
                //if (!m[nrl]) nrerror("allocation failure 2 in matrix()");
                m[nrl] += NR_END;
                m[nrl] -= ncl;

                for(i=nrl+1;i<=nrh;i++) m[i]=m[i-1]+ncol;

                /* return pointer to array of pointers to rows */
                return m;
                }
            </OMForeign>
            <OMForeign encoding="C_header">
                double **dmatrix(long nrl, long nrh, long ncl, long nch);
            </OMForeign>
            <OMForeign encoding="C">
                double **dmatrix(long nrl, long nrh, long ncl, long nch);
            </OMForeign>
            <OMS cd = "CLib" name = "matrix"/>
        </OMATP>
        <OMA>
            <OMS cd = "Matrices" name = "matrix"/>
            <OMV>n</OMV>
            <OMV>m</OMV>
        </OMA>
    </OMATTR>
</CDDefinition>

